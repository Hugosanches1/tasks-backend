pipeline{
    agent any
    stages{
        stage ('Build Backend'){
            steps{
                bat 'mvn clean package -DskipTests=true'
            }
        }
        stage ('Unit Tests'){
            steps{
                bat 'mvn test'
            }
        }
        stage ('Sonar Analysis'){
            environment{
                scannerHome = tool 'SONAR_SCANNER'
            }
            steps{
                withSonarQubeEnv('SONAR_LOCAL'){
                bat "${scannerHome}/bin/sonar-scanner -e -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://localhost:9000 -Dsonar.login=4f635edf914ba363985a95bdf08e7a342f15ea32 -Dsonar.java.binaries=target -Dsonar.coverage.exclusions=**/.mvn/**,**src/test/**,**/model/**,**Application.java"
                }
            }
        }
        stage ('Quality Gate'){
            steps{
                sleep(30)
                timeout(time: 1, unit: 'MINUTES'){
                    waitForQualityGate abortPipeline: true
                }
            }            
        }  
        stage ('Deploy Backend'){
            steps{
                deploy adapters: [tomcat8(credentialsId: 'TomcatLogin', path: '', url: 'http://localhost:8001/')], contextPath: 'tasks-backend', war: 'target\\tasks-backend.war'
            }
        } 
        stage ('API Test'){
            steps{
                dir('api-test'){
                    git credentialsId: 'login_github', url: 'https://github.com/Hugosanches1/tasks-api-test'
                    bat 'mvn test'
                }
            }
        } 
        stage ('Deploy Frontend'){
            steps{
                dir('frontend'){
                    git credentialsId: 'login_github', url: 'https://github.com/Hugosanches1/tasks-frontend'
                    bat 'mvn clean package'
                    deploy adapters: [tomcat8(credentialsId: 'TomcatLogin', path: '', url: 'http://localhost:8001/')], contextPath: 'tasks', war: 'target\\tasks.war'
                }
            }
        } 
        stage ('Funcional Test'){
            steps{
                dir('funcional Test'){
                    git credentialsId: 'login_github', url: 'https://github.com/Hugosanches1/tasks-funciona-testes'
                    bat 'mvn test'
                }
            }
        }  
        stage ('Deploy Prod') {
            steps{
                bat 'docker-compose build'
                bat 'docker-compose up -d'
            }
        }
        stage ('Healt Check'){
            steps{
                sleep(10)
                dir('funcional Test'){
                    bat 'mvn verify -Dskip.surefire.tests'
                }
            }
        } 
    }
    post{
        always{
            junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml, api-test/target/surefire-reports/*.xml, target/surefire-reports/*.xml, target/failsafe-reports/*.xml'
            archiveArtifacts artifacts: '/target/tasks-backend.war, frontend/target/tasks.war',  followSymlinks: false, onlyIfSuccessful: true
        }
    }
}

